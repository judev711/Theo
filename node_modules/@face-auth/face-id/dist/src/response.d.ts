export interface AuthorizeResponse {
    isAuth: boolean;
    token: string | null;
}
export interface RegisterResponse {
    ok: boolean;
}
export interface IdentifyResponse {
    ok: boolean;
    userId?: string | null;
}
export interface UnregisterResponse {
    ok: boolean;
}
export interface Either<T> {
    data?: T | null;
    success: boolean;
    error?: FaceError | null;
}
export interface FaceError {
    code: ErrorCode;
    msg?: string;
}
export declare enum ErrorCode {
    NO_FACE_FOUND_IN_IMAGE = "NO_FACE_FOUND_IN_IMAGE",
    MORE_THAN_ONE_FACE_FOUND_IN_IMAGE = "MORE_THAN_ONE_FACE_FOUND_IN_IMAGE",
    MORE_THAN_ONE_MATCH = "MORE_THAN_ONE_MATCH",
    INVALID_IMAGE_FILE = "INVALID_IMAGE_FILE",
    INVALID_IMAGE_SIZE_FILE = "INVALID_IMAGE_SIZE_FILE",
    INVALID_IMAGE_FORMAT_FILE = "INVALID_IMAGE_FORMAT_FILE",
    NOT_FOUND = "NOT_FOUND",
    ALREADY_EXIST = "ALREADY_EXIST",
    UNHANDLED_ERROR = "UNHANDLED_ERROR",
    BAD_REQUEST = "BAD_REQUEST",
    UNAUTHORIZED = "UNAUTHORIZED"
}
